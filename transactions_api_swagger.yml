swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        required: true
        type: string
      - in: body
        name: body
        description: Update user profile attributes
        required: true
        schema:
          $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get all transactions for the current month
      description: Returns a list of all user transactions grouped by account for the current month
      parameters:
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        required: true
        type: string
      - in: query
        name: month
        type: string
        description: Month filter in format YYYY-MM (optional)
      - in: query
        name: accountId
        type: string
        description: Filter transactions by account ID (optional) 
      produces:
        - application/json
      responses:
        '200':
          description: List of transactions grouped by account
          schema:
            $ref: '#/definitions/TransactionsByAccount'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Create a new transaction
      description: Add a new transaction to a user account
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/NewTransaction'
      - in: header
        name: Authorization
        required: true
        description: Attach Bearer JWT token
        type: string
      produces:
        - application/json
      responses:
        '201':
          description: Transaction created
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transaction details
      description: Returns details for a specific transaction
      parameters:
        - in: path
          name: transactionId
          type: string
          required: true
          description: ID of the transaction
        - in: header
          name: Authorization
          required: true
          description: Attach Bearer JWT token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update a transaction
      description: Modify the information of an existing transaction
      parameters:
        - in: path
          name: transactionId
          type: string
          required: true
          description: ID of the transaction to update
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
        - in: header
          name: Authorization
          required: true
          description: Attach Bearer JWT token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated
        '400':
          description: Invalid input
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete a transaction
      description: Delete a transaction by its ID
      parameters:
        - in: path
          name: transactionId
          type: string
          required: true
          description: ID of the transaction to delete
        - in: header
          name: Authorization
          required: true
          description: Attach Bearer JWT token
          type: string
      responses:
        '200':
          description: Transaction deleted
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  Transaction:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string
      amount:
        type: number
        format: float
      type:
        type: string
        enum: [credit, debit]
      category:
        type: string
      note:
        type: string
      date:
        type: string
        format: date-time

  TransactionsByAccount:
    type: object
    properties:
      accountId:
        type: string
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'

  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
      note:
        type: string

  NewTransaction:
    type: object
    required:
      - accountId
      - amount
      - type
      - date
    properties:
      accountId:
        type: string
      amount:
        type: number
        format: float
      type:
        type: string
        enum: [credit, debit]
      category:
        type: string
      note:
        type: string
      date:
        type: string
        format: date-time
